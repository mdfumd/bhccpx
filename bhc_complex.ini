# -----------------------------------------------------------------------------
# This file is part of the BHC Complexity Toolkit.
#
# The BHC Complexity Toolkit is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The BHC Complexity Toolkit is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with the BHC Complexity Toolkit.  If not, 
# see <https://www.gnu.org/licenses/>.
# -----------------------------------------------------------------------------
# Copyright 2019, Mark D. Flood
#
# Author: Mark D. Flood
# Last revision: 22-Jun-2019
# -----------------------------------------------------------------------------

# =============================================================================
# ====== Default configuration parameters, for all modules ====================
# =============================================================================
[DEFAULT]

# Number of CPU cores to use for parallelization. This number should not
# exceed the number of CPU cores on your machine (beyond that point, the
# extra "parallel" tasks queue up in serial fashion). 
# Set this value to zero (parallelcores=0) to skip parallelizing altogether.
# To learn the number of cores present on your own machine, issue in python:
#   import multiprocessing
#   multiprocessing.cpu_count()
# You may override parallelcores for specific tasks below (not recommended).
parallelcores=6

# The datadir is where the NIC ZIP, XML or CSV downloads are stored. 
# You may override this choice for specific tasks below (not recommended).
datadir=./data

# The cachedir is the location for generated data artefacts (such as interim 
# *.pik files). You can empty the cachedir at any time and have it 
# created afresh. This will likely be a computationally costly operation.
# You may override this choice for specific tasks below (not recommended).
cachedir=./data/cache

# Whether to display progress bars in the console
progressbars=True


# =============================================================================
# ========= Configuration parameters for www2dat.py ===========================
# =============================================================================
[www2dat]

# Number of seconds to sleep between downloads; this can help avoid 
# connection resets by the FFIEC's server. The FFIEC appears to be 
# particularly glitchy about automated downloads, and even a 
# long interval may not address the problem. 
# You may well find it easier to pick a short interval (for example, 
# sleep_interval=5), and download the NIC files "manually" from:
#   https://www.ffiec.gov/npw/FinancialReport/DataDownload
# If you do this, be sure that the filenames of your downloads match the
# local target filenames below (nic_xmltgt_attributesactive, etc.).
sleep_interval=30


#..............................................................................
# Whether to download the NIC data
nic_fetch=False

# Local directory to store the downloaded NIC data files
# Modify this only when truly necessary, and if you know what you're doing
nic_dir=${DEFAULT:datadir}/NIC

# Local subdirectory (within the nic_dir) to store the NIC data files
# This should be a string of the form YYYYQQ (for example, '2019Q2')
# Alternatively, set nic_subdir=None to generate a value based on today's date
nic_subdir=None

# If downloading, which NIC format to retrieve. Recognized options are:
#   XML  -- Zipped XML downloads
#   CSV  -- Zipped CSV downloads
#   Both -- Both XML and CSV
# There will typically be no need to download both versions. If XML is 
# downloaded, you will need to parse the XML to CSV, so the recommended 
# choice for most users here is CSV.
nic_format=CSV

# Download URLs for the NIC XML data
# Modify these only when truly necessary, and if you know what you're doing
nic_xml_attributesactive=https://www.ffiec.gov/npw/FinancialReport/ReturnAttributesActiveZipFile
nic_xml_attributesbranch=https://www.ffiec.gov/npw/FinancialReport/ReturnAttributesBranchesZipFile
nic_xml_attributesclosed=https://www.ffiec.gov/npw/FinancialReport/ReturnAttributesClosedZipFile
nic_xml_relationships=https://www.ffiec.gov/npw/FinancialReport/ReturnRelationshipsZipFile
nic_xml_transformations=https://www.ffiec.gov/npw/FinancialReport/ReturnTransformationZipFile
# Local target files for the same
nic_xmltgt_attributesactive=XML_ATTRIBUTES_ACTIVE.zip
nic_xmltgt_attributesbranch=XML_ATTRIBUTES_BRANCHES.zip
nic_xmltgt_attributesclosed=XML_ATTRIBUTES_CLOSED.zip
nic_xmltgt_relationships=XML_RELATIONSHIPS.zip
nic_xmltgt_transformations=XML_TRANSFORMATIONS.zip

# Download URLs for the NIC XML data
# Modify these only when truly necessary, and if you know what you're doing
nic_csv_attributesactive=https://www.ffiec.gov/npw/FinancialReport/ReturnAttributesActiveZipFileCSV
nic_csv_attributesbranch=https://www.ffiec.gov/npw/FinancialReport/ReturnAttributesBranchesZipFileCSV
nic_csv_attributesclosed=https://www.ffiec.gov/npw/FinancialReport/ReturnAttributesClosedZipFileCSV
nic_csv_relationships=https://www.ffiec.gov/npw/FinancialReport/ReturnRelationshipsZipFileCSV
nic_csv_transformations=https://www.ffiec.gov/npw/FinancialReport/ReturnTransformationZipFileCSV
# Local target files for the same
nic_csvtgt_attributesactive=CSV_ATTRIBUTES_ACTIVE.zip
nic_csvtgt_attributesbranch=CSV_ATTRIBUTES_BRANCHES.zip
nic_csvtgt_attributesclosed=CSV_ATTRIBUTES_CLOSED.zip
nic_csvtgt_relationships=CSV_RELATIONSHIPS.zip
nic_csvtgt_transformations=CSV_TRANSFORMATIONS.zip


#..............................................................................
# Whether to download the FDIC community banking data data
fdiccb_fetch=False

# Local directory to store the downloaded FDIC CB data files
# Modify this only when truly necessary, and if you know what you're doing
fdiccb_dir=${DEFAULT:datadir}/FDIC_CB

# Download URLs for the FDIC community banking data (includes high-holders)
# For detailed documentation, see:  
#   https://www.fdic.gov/regulations/resources/cbi/data.html
#   https://www.fdic.gov/regulations/resources/cbi/data/public-cb-readme.html
#   https://www.fdic.gov/regulations/resources/cbi/data/public-cb-multi-period-readme.html
#   https://www.fdic.gov/regulations/resources/cbi/data/public-ref-readme.html
# Modify these only when truly necessary, and if you know what you're doing
fdiccb_csv_8487=https://www.fdic.gov/regulations/resources/cbi/data/historical-community-banking-reference-data-1984-to-1987.zip
fdiccb_csv_8891=https://www.fdic.gov/regulations/resources/cbi/data/historical-community-banking-reference-data-1988-to-1991.zip
fdiccb_csv_9296=https://www.fdic.gov/regulations/resources/cbi/data/historical-community-banking-reference-data-1992-to-1996.zip
fdiccb_csv_9702=https://www.fdic.gov/regulations/resources/cbi/data/historical-community-banking-reference-data-1997-to-2002.zip
fdiccb_csv_0309=https://www.fdic.gov/regulations/resources/cbi/data/historical-community-banking-reference-data-2003-to-2009.zip
fdiccb_csv_1016=https://www.fdic.gov/regulations/resources/cbi/data/historical-community-banking-reference-data-2010-to-2016.zip
fdiccb_csv_1719=https://www.fdic.gov/regulations/resources/cbi/data/historical-community-banking-reference-data-2017-to-2019.zip
# Local target files for the same
fdiccb_csvtgt_8487=FDIC_CB_1984-1987.zip
fdiccb_csvtgt_8891=FDIC_CB_1988-1991.zip
fdiccb_csvtgt_9296=FDIC_CB_1992-1996.zip
fdiccb_csvtgt_9702=FDIC_CB_1997-2002.zip
fdiccb_csvtgt_0309=FDIC_CB_2003-2009.zip
fdiccb_csvtgt_1016=FDIC_CB_2010-2016.zip
fdiccb_csvtgt_1719=FDIC_CB_2017-2019.zip


#..............................................................................
# Whether to download the FDIC failure data 
fdicsod_fetch=True

# Local directory to store the downloaded FDIC Fail files
# Modify this only when truly necessary, and if you know what you're doing
fdicsod_dir=${DEFAULT:datadir}/FDIC_SoD

# Download URLs for the FDIC summary of deposits data (includes high-holders)
# For detailed documentation, see:  
#   https://www5.fdic.gov/sod/dynaDownload.asp?barItem=6
#   https://www.fdic.gov/regulations/resources/call/sod.html
# Modify these only when truly necessary, and if you know what you're doing
fdicsod_url_filelist=[
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2018.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2017.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2016.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2015.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2014.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2013.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2012.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2011.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2010.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2009.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2008.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2007.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2006.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2005.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2004.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2003.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2002.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2001.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2000.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1999.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1998.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1997.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1996.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1995.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1994.zip',
  ]
#fdicsod_csv_2018=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2018.zip
#fdicsod_csv_2017=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2017.zip
#fdicsod_csv_2016=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2016.zip
#fdicsod_csv_2015=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2015.zip
#fdicsod_csv_2014=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2014.zip
#fdicsod_csv_2013=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2013.zip
#fdicsod_csv_2012=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2012.zip
#fdicsod_csv_2011=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2011.zip
#fdicsod_csv_2010=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2010.zip
#fdicsod_csv_2009=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2009.zip
#fdicsod_csv_2008=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2008.zip
#fdicsod_csv_2007=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2007.zip
#fdicsod_csv_2006=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2006.zip
#fdicsod_csv_2005=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2005.zip
#fdicsod_csv_2004=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2004.zip
#fdicsod_csv_2003=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2003.zip
#fdicsod_csv_2002=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2002.zip
#fdicsod_csv_2001=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2001.zip
#fdicsod_csv_2000=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2000.zip
#fdicsod_csv_1999=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1999.zip
#fdicsod_csv_1998=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1998.zip
#fdicsod_csv_1997=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1997.zip
#fdicsod_csv_1996=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1996.zip
#fdicsod_csv_1995=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1995.zip
#fdicsod_csv_1994=https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1994.zip

# Filenames of the unzipped CSV files for the FDIC SoD download
# Modify this only when truly necessary, and if you know what you're doing
fdicsod_ziptgt_filelist=[
            'ALL_2018.zip',
            'ALL_2017.zip',
            'ALL_2016.zip',
            'ALL_2015.zip',
            'ALL_2014.zip',
            'ALL_2013.zip',
            'ALL_2012.zip',
            'ALL_2011.zip',
            'ALL_2010.zip',
            'ALL_2009.zip',
            'ALL_2008.zip',
            'ALL_2007.zip',
            'ALL_2006.zip',
            'ALL_2005.zip',
            'ALL_2004.zip',
            'ALL_2003.zip',
            'ALL_2002.zip',
            'ALL_2001.zip',
            'ALL_2000.zip',
            'ALL_1999.zip',
            'ALL_1998.zip',
            'ALL_1997.zip',
            'ALL_1996.zip',
            'ALL_1995.zip',
            'ALL_1994.zip',
    ]

#fdicsod_csvtgt_2018=ALL_2018.zip
#fdicsod_csvtgt_2017=ALL_2017.zip
#fdicsod_csvtgt_2016=ALL_2016.zip
#fdicsod_csvtgt_2015=ALL_2015.zip
#fdicsod_csvtgt_2014=ALL_2014.zip
#fdicsod_csvtgt_2013=ALL_2013.zip
#fdicsod_csvtgt_2012=ALL_2012.zip
#fdicsod_csvtgt_2011=ALL_2011.zip
#fdicsod_csvtgt_2010=ALL_2010.zip
#fdicsod_csvtgt_2009=ALL_2009.zip
#fdicsod_csvtgt_2008=ALL_2008.zip
#fdicsod_csvtgt_2007=ALL_2007.zip
#fdicsod_csvtgt_2006=ALL_2006.zip
#fdicsod_csvtgt_2005=ALL_2005.zip
#fdicsod_csvtgt_2004=ALL_2004.zip
#fdicsod_csvtgt_2003=ALL_2003.zip
#fdicsod_csvtgt_2002=ALL_2002.zip
#fdicsod_csvtgt_2001=ALL_2001.zip
#fdicsod_csvtgt_2000=ALL_2000.zip
#fdicsod_csvtgt_1999=ALL_1999.zip
#fdicsod_csvtgt_1998=ALL_1998.zip
#fdicsod_csvtgt_1997=ALL_1997.zip
#fdicsod_csvtgt_1996=ALL_1996.zip
#fdicsod_csvtgt_1995=ALL_1995.zip
#fdicsod_csvtgt_1994=ALL_1994.zip


#..............................................................................
# Whether to download the FDIC failure data 
fdicfail_fetch=False

# Local directory to store the downloaded FDIC Fail files
# Modify this only when truly necessary, and if you know what you're doing
fdicfail_dir=${DEFAULT:datadir}/FDIC_Fail

# Download URL for the FDIC failure data (includes resolution costs)
# Modify this only when truly necessary, and if you know what you're doing
fdicfail_csv_curr=https://tinyurl.com/y3nlsvrk
# Local target files for the same
fdicfail_csvtgt_curr=FDIC_FailureAssistance.csv



# =============================================================================
# ========= Configuration parameters for zip2xml.py ===========================
# =============================================================================
[zip2xml]

# Whether to overwrite existing local files when unzipping
force=False


#..............................................................................
# Whether to attempt unzipping the NIC data
nic_unzip=False

# Local directory to store the downloaded NIC data files
# Modify this only when truly necessary, and if you know what you're doing
nic_dir=${www2dat:nic_dir}

# Local subdirectory (within the nic_dir) to store the NIC data files
# Modify this only when truly necessary, and if you know what you're doing
nic_subdir=${www2dat:nic_subdir}

# If downloading, which NIC format to unzip
# Modify this only when truly necessary, and if you know what you're doing
nic_format=${www2dat:nic_format}

# Local filenames for the downloaded NIC (zipped) XML files
# Modify these only when truly necessary, and if you know what you're doing
nic_xmltgt_attributesactive=${www2dat:nic_xmltgt_attributesactive}
nic_xmltgt_attributesbranch=${www2dat:nic_xmltgt_attributesbranch}
nic_xmltgt_attributesclosed=${www2dat:nic_xmltgt_attributesclosed}
nic_xmltgt_relationships=${www2dat:nic_xmltgt_relationships}
nic_xmltgt_transformations=${www2dat:nic_xmltgt_transformations}

# Local filenames for the downloaded NIC (zipped) CSV files
# Modify these only when truly necessary, and if you know what you're doing
nic_csvtgt_attributesactive=${www2dat:nic_csvtgt_attributesactive}
nic_csvtgt_attributesbranch=${www2dat:nic_csvtgt_attributesbranch}
nic_csvtgt_attributesclosed=${www2dat:nic_csvtgt_attributesclosed}
nic_csvtgt_relationships=${www2dat:nic_csvtgt_relationships}
nic_csvtgt_transformations=${www2dat:nic_csvtgt_transformations}

# Normalized filenames to apply after unzipping the CSV files.
# These names guarantee that both unzipped CSVs and CSVs parsed from XML
# have the identical filenames for downstream processing.
# Modify these only when truly necessary, and if you know what you're doing
nic_csvnrm_attributesactive=ATTRIBUTES_ACTIVE.csv
nic_csvnrm_attributesbranch=ATTRIBUTES_BRANCH.csv
nic_csvnrm_attributesclosed=ATTRIBUTES_CLOSED.csv
nic_csvnrm_relationships=RELATIONSHIPS.csv
nic_csvnrm_transformations=TRANSFORMATIONS.csv


#..............................................................................
# Whether to attempt unzipping the FDIC Summary of Deposits (SoD) data
fdicsod_unzip=True

# Local directory that stores the downloaded FDIC SoD data files
# Modify this only when truly necessary, and if you know what you're doing
fdicsod_dir=${www2dat:fdicsod_dir}

# Local filenames for the downloaded FDIC SoD data files
# Modify this only when truly necessary, and if you know what you're doing
fdicsod_csvtgt_2018=${www2dat:fdicsod_csvtgt_2018}
fdicsod_csvtgt_2017=${www2dat:fdicsod_csvtgt_2017}
fdicsod_csvtgt_2016=${www2dat:fdicsod_csvtgt_2016}
fdicsod_csvtgt_2015=${www2dat:fdicsod_csvtgt_2015}
fdicsod_csvtgt_2014=${www2dat:fdicsod_csvtgt_2014}
fdicsod_csvtgt_2013=${www2dat:fdicsod_csvtgt_2013}
fdicsod_csvtgt_2012=${www2dat:fdicsod_csvtgt_2012}
fdicsod_csvtgt_2011=${www2dat:fdicsod_csvtgt_2011}
fdicsod_csvtgt_2010=${www2dat:fdicsod_csvtgt_2010}
fdicsod_csvtgt_2009=${www2dat:fdicsod_csvtgt_2009}
fdicsod_csvtgt_2008=${www2dat:fdicsod_csvtgt_2008}
fdicsod_csvtgt_2007=${www2dat:fdicsod_csvtgt_2007}
fdicsod_csvtgt_2006=${www2dat:fdicsod_csvtgt_2006}
fdicsod_csvtgt_2005=${www2dat:fdicsod_csvtgt_2005}
fdicsod_csvtgt_2004=${www2dat:fdicsod_csvtgt_2004}
fdicsod_csvtgt_2003=${www2dat:fdicsod_csvtgt_2003}
fdicsod_csvtgt_2002=${www2dat:fdicsod_csvtgt_2002}
fdicsod_csvtgt_2001=${www2dat:fdicsod_csvtgt_2001}
fdicsod_csvtgt_2000=${www2dat:fdicsod_csvtgt_2000}
fdicsod_csvtgt_1999=${www2dat:fdicsod_csvtgt_1999}
fdicsod_csvtgt_1998=${www2dat:fdicsod_csvtgt_1998}
fdicsod_csvtgt_1997=${www2dat:fdicsod_csvtgt_1997}
fdicsod_csvtgt_1996=${www2dat:fdicsod_csvtgt_1996}
fdicsod_csvtgt_1995=${www2dat:fdicsod_csvtgt_1995}
fdicsod_csvtgt_1994=${www2dat:fdicsod_csvtgt_1994}


#..............................................................................
# Whether to attempt unzipping the FDIC CB data
fdiccb_unzip=False

# Local directory that stores the downloaded FDIC CB data files
# Modify this only when truly necessary, and if you know what you're doing
fdiccb_dir=${www2dat:fdiccb_dir}

# Local filenames for the downloaded FDIC CB data files
# Modify this only when truly necessary, and if you know what you're doing
fdiccb_csvtgt_8487=${www2dat:fdiccb_csvtgt_8487}
fdiccb_csvtgt_8891=${www2dat:fdiccb_csvtgt_8891}
fdiccb_csvtgt_9296=${www2dat:fdiccb_csvtgt_9296}
fdiccb_csvtgt_9702=${www2dat:fdiccb_csvtgt_9702}
fdiccb_csvtgt_0309=${www2dat:fdiccb_csvtgt_0309}
fdiccb_csvtgt_1016=${www2dat:fdiccb_csvtgt_1016}
fdiccb_csvtgt_1719=${www2dat:fdiccb_csvtgt_1719}

# Normalized local filenames for unzipped FDIC CB data files (CSV format)
# Each filename *must* be of the form (case-sensitive): 
#    FDIC_CB_yyyy-yyyy.csv
# because the filenames themselves encode the years covered. 
fdiccb_csvnrm_8487=FDIC_CB_1984-1987.csv
fdiccb_csvnrm_8891=FDIC_CB_1988-1991.csv
fdiccb_csvnrm_9296=FDIC_CB_1992-1996.csv
fdiccb_csvnrm_9702=FDIC_CB_1997-2002.csv
fdiccb_csvnrm_0309=FDIC_CB_2003-2009.csv
fdiccb_csvnrm_1016=FDIC_CB_2010-2016.csv
fdiccb_csvnrm_1719=FDIC_CB_2017-2019.csv


# =============================================================================
# ========= Configuration parameters for xml2csv.py ===========================
# =============================================================================
[xml2csv]

# Whether to parse the XML files. 
# If you are working with the CSV downloads of the NIC files, you should
# set this to False, as there will be no XML files to parse.
perform_xml_parse=False

# Local directory to store the downloaded NIC data files
# Modify this only when truly necessary, and if you know what you're doing
nic_dir=${www2dat:nic_dir}

# Local subdirectory (within the nic_dir) to store the NIC data files
# Modify this only when truly necessary, and if you know what you're doing
nic_subdir=${www2dat:nic_subdir}

# These are the default filenames of the raw XML files in outdir.
# In other words, these are the filenames after unzipping the data files.
# Note that FFIEC practice has changed over the years, so downloads of 
# different vintages may have different filenames.
attributesactive=${www2dat:nic_xmltgt_attributesactive}
attributesbranch=${www2dat:nic_xmltgt_attributesbranch}
attributesclosed=${www2dat:nic_xmltgt_attributesclosed}
relationships=${www2dat:nic_xmltgt_relationships}
transformations=${www2dat:nic_xmltgt_transformations}

# Universe of attribute fields, in the order the columns should appear in 
# the CSV file. Running xml2csv in veryverbose mode will display this list, 
# sorted alphabetically. 
# Alternatively, the following commands will show the alphabetical list:
#   import bhc_config as CONFIG
#   print sorted(CONFIG.attributestemplate)
attributestemplate=[
    'ID_RSSD',
    'ACT_PRIM_CD',
    'AUTH_REG_DIST_FRS',
    'BANK_CTD',
    'BHC_IND',
    'BNK_TYPE_ANALYS_CD',
    'BROAD_REG_CD',
    'CHTR_AUTH_CD',
    'CHTR_TYPE_CD',
    'CITY',
    'CNSRVTR_CD',
    'CNTRY_CD',
    'CNTRY_INC_CD',
    'CNTRY_INC_NM',
    'CNTRY_NM',
    'COUNTY_CD',
    'DIST_FRS',
    'DOMESTIC_IND',
    'DT_END',
    'DT_EXIST_CMNC',
    'DT_EXIST_TERM',
    'DT_INSUR',
    'DT_OPEN',
    'DT_START',
    'D_DT_END',
    'D_DT_EXIST_CMNC',
    'D_DT_EXIST_TERM',
    'D_DT_INSUR',
    'D_DT_OPEN',
    'D_DT_START',
    'ENTITY_TYPE',
    'EST_TYPE_CD',
    'FBO_4C9_IND',
    'FHC_IND',
    'FISC_YREND_MMDD',
    'FNCL_SUB_HOLDER',
    'FNCL_SUB_IND',
    'FUNC_REG',
    'IBA_GRNDFTHR_IND',
    'IBF_IND',
    'ID_ABA_PRIM',
    'ID_CUSIP',
    'ID_FDIC_CERT',
    'ID_LEI',
    'ID_NCUA',
    'ID_OCC',
    'ID_RSSD_HD_OFF',
    'ID_TAX',
    'ID_THRIFT',
    'ID_THRIFT_HC',
    'IHC_IND',
    'INSUR_PRI_CD',
    'MBR_FHLBS_IND',
    'MBR_FRS_IND',
    'MJR_OWN_MNRTY',
    'NM_LGL',
    'NM_SHORT',
    'NM_SRCH_CD',
    'ORG_TYPE_CD',
    'PLACE_CD',
    'PRIM_FED_REG',
    'PROV_REGION',
    'REASON_TERM_CD',
    'SEC_RPTG_STATUS',
    'SLHC_IND',
    'SLHC_TYPE_IND',
    'STATE_ABBR_NM',
    'STATE_CD',
    'STATE_HOME_CD',
    'STATE_INC_ABBR_NM',
    'STATE_INC_CD',
    'STREET_LINE1',
    'STREET_LINE2',
    'URL',
    'ZIP_CD',
 ]

# Universe of relationship fields, in the order the columns should appear in 
# the CSV file. Running xml2csv in veryverbose mode will display this list, 
# sorted alphabetically. 
# Alternatively, the following commands will show the alphabetical list:
#   import bhc_config as CONFIG
#   print sorted(CONFIG.relationshipstemplate)
relationshipstemplate=[
    'CTRL_IND',
    'DT_END',
    'DT_RELN_EST',
    'DT_START',
    'D_DT_END',
    'D_DT_RELN_EST',
    'D_DT_START',
    'EQUITY_IND',
    'FC_IND',
    'ID_RSSD_OFFSPRING',
    'ID_RSSD_PARENT',
    'MB_COST',
    'OTHER_BASIS_IND',
    'PCT_EQUITY',
    'PCT_EQUITY_BRACKET',
    'PCT_EQUITY_FORMAT',
    'PCT_OTHER',
    'REASON_ROW_CRTD',
    'REASON_TERM_RELN',
    'REGK_INV',
    'REG_IND',
    'RELN_LVL',
 ]

# Universe of transformations fields, in the order the columns should appear in 
# the CSV file. Running xml2csv in veryverbose mode will display this list, 
# sorted alphabetically. 
# Alternatively, the following commands will show the alphabetical list:
#   import bhc_config as CONFIG
#   print sorted(CONFIG.transformationstemplate)
transformationstemplate=[
    'ACCT_METHOD',
    'DT_TRANS',
    'D_DT_TRANS',
    'ID_RSSD_PREDECESSOR',
    'ID_RSSD_SUCCESSOR',
    'TRNSFM_CD',
 ]

# The extension to use on the output CSV file
outfileext=.csv

# The delimiter to use in generating the CSV file while parsing the XML.
# A tab delimiter is recommended (use the special string: <TAB>), because 
# other common choices for delimiters (e.g., commas) are likely to 
# conflict with characters within the data.
# Modify this only when truly necessary, and if you know what you're doing
delim=<TAB>

# Normalized filenames to apply after unzipping the CSV files.
# These names guarantee that both unzipped CSVs and CSVs parsed from XML
# have the identical filenames for downstream processing.
# Modify these only when truly necessary, and if you know what you're doing
#nic_csvnrm_attributesactive=${zip2xml:nic_csvnrm_attributesactive}
#nic_csvnrm_attributesbranch=${zip2xml:nic_csvnrm_attributesbranch}
#nic_csvnrm_attributesclosed=${zip2xml:nic_csvnrm_attributesclosed}
#nic_csvnrm_relationships=${zip2xml:nic_csvnrm_relationships}
#nic_csvnrm_transformations=${zip2xml:nic_csvnrm_transformations}

# Size of a parsing buffer, which should be large enough to read a full 
# XML element at each iteration. 
# If this number is too small, parsing may fail.
# If this number is too large, parsing will be slow.
# A good choice is chunksize=4096. 
# Modify this only when truly necessary, and if you know what you're doing
chunksize=4096

# Location for the raw *.zip input files
# Modify this only when truly necessary, and if you know what you're doing
indir=${DEFAULT:datadir}

# Location for the processed *.xml output files
# Modify this only when truly necessary, and if you know what you're doing
outdir=${DEFAULT:datadir}

  
# =============================================================================
# ========= Configuration parameters for csv2sys.py ===========================
# =============================================================================
[csv2sys]

# The first (asofdate0) and last (asofdate1) as-of dates to loop over.
# Each as-of endpoint should be a string of the form 'YYYYQQ', which will 
# be converted into proper end-of-quarter integers of the form YYYYMMDD,
# along with any intervening quarter endpoints. 
#asofdate0=1986Q1
asofdate0=2018Q2
asofdate1=2018Q2

# Whether to produce super-granular logging
trace_logging=False


#..............................................................................
# Whether to empty the cache and start from scratch
clearcache_banksys=True

#..............................................................................
# Whether to empty the cache and start from scratch
clearcache_nic=False

# Local directory to store the downloaded NIC data files
# Modify this only when truly necessary, and if you know what you're doing
nic_dir=${www2dat:nic_dir}

# Local subdirectory (within the nic_dir) to store the NIC data files
# Modify this only when truly necessary, and if you know what you're doing
nic_subdir=${www2dat:nic_subdir}

# These are the default filenames of the CSV source files in the indir.
# We do not use the NIC Transformations file, but list it for completeness
#attributesactive=XML_ATTRIBUTES_ACTIVE.csv
#attributesbranch=XML_ATTRIBUTES_BRANCHES.csv
#attributesclosed=XML_ATTRIBUTES_CLOSED.csv
#relationships=XML_RELATIONSHIPS.csv
attributesactive=${zip2xml:nic_csvnrm_attributesactive}
attributesbranch=${zip2xml:nic_csvnrm_attributesbranch}
attributesclosed=${zip2xml:nic_csvnrm_attributesclosed}
relationships=${zip2xml:nic_csvnrm_relationships}
transformations=${zip2xml:nic_csvnrm_transformations}

# The delimiter to use when parsing the NIC CSV files.
# If you are using the CSV downloads of the NIC from the FFIEC's site, then
# use the comma (delim=,) delimiter, because that is the FFIEC convention.
# If you are parsing the XML downloads of the NIC from the FFIEC's site, then
# use whatever delimiter you used above at the XML parsing stage to 
# generate your CSV files. 
#delim=<TAB>
#delim=${xml2csv:delim}
delim=,


#..............................................................................
# Whether to empty the cache and start from scratch
clearcache_fdiccb=False

# Local directory to store the downloaded FDIC CB data files
# Modify this only when truly necessary, and if you know what you're doing
fdiccb_dir=${www2dat:fdiccb_dir}

# Local target files for the unzipped FDIC CB data files
# These file names need to match the files as unpacked by step www2dat
fdiccb_csvnrm_8487=${zip2xml:fdiccb_csvnrm_8487}
fdiccb_csvnrm_8891=${zip2xml:fdiccb_csvnrm_8891}
fdiccb_csvnrm_9296=${zip2xml:fdiccb_csvnrm_9296}
fdiccb_csvnrm_9702=${zip2xml:fdiccb_csvnrm_9702}
fdiccb_csvnrm_0309=${zip2xml:fdiccb_csvnrm_0309}
fdiccb_csvnrm_1016=${zip2xml:fdiccb_csvnrm_1016}
fdiccb_csvnrm_1719=${zip2xml:fdiccb_csvnrm_1719}

fdiccb_csvnrm_filelist=[
            '${zip2xml:fdiccb_csvnrm_8487}',
            '${zip2xml:fdiccb_csvnrm_8891}',
            '${zip2xml:fdiccb_csvnrm_9296}',
            '${zip2xml:fdiccb_csvnrm_9702}',
            '${zip2xml:fdiccb_csvnrm_0309}',
            '${zip2xml:fdiccb_csvnrm_1016}',
            '${zip2xml:fdiccb_csvnrm_1719}',
    ]

#..............................................................................
# Whether to empty the cache and start from scratch
clearcache_fdicsod=False

# Local directory that stores the downloaded FDIC SoD data files
# Modify this only when truly necessary, and if you know what you're doing
fdicsod_dir=${www2dat:fdicsod_dir}

# Filenames of the unzipped CSV files for the FDIC SoD download
# Modify this only when truly necessary, and if you know what you're doing
fdicsod_csv_filelist=[
            'ALL_2018.csv',
            'ALL_2017.csv',
            'ALL_2016.csv',
            'ALL_2015.csv',
            'ALL_2014.csv',
            'ALL_2013.csv',
            'ALL_2012.csv',
            'ALL_2011.csv',
            'ALL_2010.csv',
            'ALL_2009.csv',
            'ALL_2008.csv',
            'ALL_2007.csv',
            'ALL_2006.csv',
            'ALL_2005.csv',
            'ALL_2004.csv',
            'ALL_2003.csv',
            'ALL_2002.csv',
            'ALL_2001.csv',
            'ALL_2000.csv',
            'ALL_1999.csv',
            'ALL_1998.csv',
            'ALL_1997.csv',
            'ALL_1996.csv',
            'ALL_1995.csv',
            'ALL_1994.csv',
    ]
#..............................................................................
# Whether to empty the cache and start from scratch
clearcache_idmaps=True


# Location for the processed *.xml output files
# Modify this only when truly necessary, and if you know what you're doing
cachedir=${DEFAULT:cachedir}

# Number of parallel processes to allow for pickling. 
# See the discussion of parallelcores above. 
# Modify this only when truly necessary, and if you know what you're doing
parallel=0
#parallel=${DEFAULT:parallelcores}


# =============================================================================
# ========= Configuration parameters for sys2bhc.py ===========================
# =============================================================================
[sys2bhc]

# A list of BHC high holders to populate and cache.
# If this list is empty (i.e., bhclist=[]), then all BHCs will 
# be built and cached.
# Note that the full set of BHCs and asof dates occupies a *large* set of
# files and disk space; this is typically wasteful and unnecessary.
bhclist=[
#    1073757, # Bank of America
#    1039502, # JPMorgan Chase
#    1951350, # Citigroup
    1073551, # Wachovia
    1120754, # Wells Fargo
 ]

# A list of asof dates to use for populating and caching BHC instances.
# If this list is empty (i.e., asoflist=[]), then *all* dates
# for which a banking system object exists in the cache will be used.
# Note that the full set of BHCs and asof dates occupies a *large* set of
# files and disk space; this is typically wasteful and unnecessary.
asoflist=[
    '2006Q4', 
    '2008Q3', 
    '2008Q4', 
    '2010Q4', 
 ]

# These are the default filenames of the CSV source files in indir.
# Note that we do not use the NIC Transformations file
attributesactive=${csv2sys:attributesactive}
attributesbranch=${csv2sys:attributesbranch}
attributesclosed=${csv2sys:attributesclosed}
relationships=${csv2sys:relationships}

# A list of additional NIC attributes to attach to the entity nodes in
# the BHC network object. 
# Three attibutes appear automatically, and should be omitted from this list:
#  -- nicsource: the attributes source file indicator ('A', 'B', or 'C')
#  -- entity_type: the NIC ENTITY_TYPE code
#  -- GEO_JURISD: concatenation of NIC CNTRY_NM and STATE_ABBR_NM codes
extraattributes=[
    'CHTR_TYPE_CD',
    'NM_LGL',
    'CNTRY_NM',
    'STATE_ABBR_NM',
    'CNTRY_CD',
    'DIST_FRS',
    'EST_TYPE_CD',
    'PRIM_FED_REG',
    'ZIP_CD',
    'BROAD_REG_CD',
    'BNK_TYPE_ANALYS_CD',
    'BHC_IND',
 ]
 
# Whether to keep branch nodes in the BHC. This filter is applied during the 
# the adding off attibutes, when it becomes known whether a node is a branch. 
usebranches=True

# Whether to empty the cache and start from scratch
clearcache=True

# Location for the *.csv input files
# Modify this only when truly necessary, and if you know what you're doing
indir=${DEFAULT:datadir}

# Location for the processed *.xml output files
# Modify this only when truly necessary, and if you know what you're doing
outdir=${DEFAULT:cachedir}

# Number of parallel processes to allow for pickling. 
# See the discussion of parallelcores above. 
# Modify this only when truly necessary, and if you know what you're doing
parallel=${DEFAULT:parallelcores}

#entity_type_projection={
#    'USA':'RobinsType1', 
#    'USB':'RobinsType2',
#    'UFA':'RobinsType3', 
#    'UFB':'RobinsType4',
#    }


# =============================================================================
# ========= Configuration parameters for bhc2out.py ===========================
# =============================================================================
[bhc2out]

# A list of BHC high holders to populate and cache.
# If this list is empty (i.e., bhclist=[]), then all BHCs are considered.
bhclist=[
#    1073757, # Bank of America
#    1039502, # JPMorgan Chase
#    1951350, # Citigroup
#    1073551, # Wachovia
#    1120754, # Wells Fargo
 ]

# A first (asofdate0) and last (asofdate1) asof dates to include in the panel.
#asofdate0=1986Q1
#asofdate1=1987Q4
asofdate0=1986Q1
asofdate1=2018Q4

# The default filename of the CSV output file (placed in outdir).
panel_filename=bhc_complexity_panel.csv

# Whether to empty the cache and start from scratch
clearcache=False

# Whether to produce the full panel of complexity results
make_panel=False

# Whether to perform basic consistency checks on the complexity metrics
test_metrics=True

# Whether to produce the Wachovia-Wells Fargo complexity comparison (Table 2)
make_wachwells_comparison=True

# A map that connects NIC entity types to X11 colors
# For a full X11 color palette, see:  https://graphviz.org/doc/info/colors.html
colormap={
    # Holding companies - BLUE
    'BHC':'cadetblue1',      # BHC Bank Holding Company
    'FBH':'cadetblue3',      # FBH Foreign Banking Organization as a BHC
    'FHD':'deepskyblue',     # FHD Financial Holding Company / BHC 
    'FHF':'deepskyblue3',    # FHF Financial Holding Company / FBO
    'IHC':'lightcyan',       # IHC Intermediate Holding Company
    'SLHC':'cornflowerblue', # SLHC Savings and Loan Holding Company
    # Bank-like entities - RED
    'AGB':'brown1',          # AGB Agreement Corporation - Banking
    'CPB':'sienna1',         # CPB Cooperative Bank
    'EDB':'brown3',          # EDB Edge Corporation - Banking
    'FSB':'darkorange1',     # FSB Federal Savings Bank
    'FBK':'indianred',       # FBK Foreign Bank
    'FBO':'indianred1',      # FBO Foreign Banking Organization
    'FCU':'salmon',          # FCU Federal Credit Union
    'IBK':'tomato',          # IBK Int'l Bank of US Depository - Edge/Trust Co.
    'NAT':'crimson',         # NAT National Bank
    'NMB':'coral3',          # NMB Non-member Bank
    'SAL':'darkorange',      # SAL Savings & Loan Association
    'SCU':'sienna3',         # SCU State Credit Union
    'SMB':'coral1',          # SMB State Member Bank
    'SSB':'darkorange2',     # SSB State Savings Bank
    # Branch-like entities - YELLOW
    'DBR':'gold',            # DBR Domestic Branch of a Domestic Bank
    'EBR':'goldenrod3',      # EBR Edge Corporation - Domestic Branch
    'IBR':'navajowhite',     # IBR Foreign Branch of a U.S. Bank
    'IFB':'khaki',           # IFB Insured Federal Branch of an FBO
    'ISB':'khaki3',          # ISB Insured State Branch of an FBO
    'PST':'lemonchiffon',    # PST Pseudo-TWIG
    'REP':'darkgoldenrod1',  # REP Representative Office
    'TWG':'lemonchiffon1',   # TWG TWIG
    'UFA':'yellow',          # UFA Uninsured Federal Agency of an FBO
    'UFB':'yellow1',         # UFB Uninsured Federal Branch of an FBO
    'USA':'yellow2',         # USA Uninsured State Agency of an FBO
    'USB':'yellow3',         # USB Uninsured State Branch of an FBO
    # Investment entities - GREEN
    'AGI':'olivedrab1',      # AGI Agreement Corporation - Investment
    'EDI':'olivedrab3',      # EDI Edge Corporation - Investment
    'FNC':'seagreen1',       # FNC Finance Company
    'MTC':'palegreen1',      # MTC Non-deposit Trust Company - Member
    'NTC':'palegreen3',      # NTC Non-deposit Trust Company - Non-member
    'NYI':'seagreen3',       # NYI New York Investment Company
    'SBD':'lawngreen',       # SBD Securities Broker / Dealer
    # Miscellaneous entity types - GREY
    'DEO':'gray100',         # DEO Domestic Entity Other
    'DPS':'gray',            # DPS Data Processing Servicer
    'FEO':'gray70',          # FEO Foreign Entity Other
    'INB':'gray90',          # INB Int'l Non-bank Subs of Domestic Entities
 }

# System command to launch an SVG viewer to view the image created
# by the makeSVG method. 
# Linux examples include:
#  -- chromium-browser
#  -- firefox
browsercmd=firefox

# These are the default filenames of the CSV source files in indir.
# Note that we do not use the NIC Transformations file
attributesactive=${csv2sys:attributesactive}
attributesbranch=${csv2sys:attributesbranch}
attributesclosed=${csv2sys:attributesclosed}
relationships=${csv2sys:relationships}

# Location for the *.csv input files
# Modify this only when truly necessary, and if you know what you're doing
indir=${DEFAULT:datadir}

# Location for the processed *.xml output files
# Modify this only when truly necessary, and if you know what you're doing
outdir=${DEFAULT:datadir}

# Number of parallel processes to allow for pickling. 
# See the discussion of parallelcores above. 
# Modify this only when truly necessary, and if you know what you're doing
parallel=${DEFAULT:parallelcores}


