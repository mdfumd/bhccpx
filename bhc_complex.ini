# -----------------------------------------------------------------------------
# This file is part of the BHC Complexity Toolkit.
#
# The BHC Complexity Toolkit is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The BHC Complexity Toolkit is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with the BHC Complexity Toolkit.  If not, 
# see <https://www.gnu.org/licenses/>.
# -----------------------------------------------------------------------------
# Copyright 2019, Mark D. Flood
#
# Author: Mark D. Flood
# Last revision: 4-Sep-2019
# -----------------------------------------------------------------------------

# =============================================================================
# ====== Default configuration parameters, for all modules ====================
# =============================================================================
[DEFAULT]

# Number of CPU cores to use for parallelization. This number should not
# exceed the number of CPU cores on your machine (beyond that point, the
# extra "parallel" tasks queue up in serial fashion). 
# Set this value to zero (parallelcores=0) to skip parallelizing altogether.
# To learn the number of cores present on your own machine, issue in python:
#   import multiprocessing
#   multiprocessing.cpu_count()
# You may override parallelcores for specific tasks below (not recommended).
parallelcores=5

# The datadir is where the NIC ZIP, XML or CSV downloads are stored. 
# You may override this choice for specific tasks below (not recommended).
datadir=./data

# The cachedir is the location for generated data artefacts (such as interim 
# *.pik files). You can empty the cachedir at any time and have it 
# created afresh. This will likely be a computationally costly operation.
# You may override this choice for specific tasks below (not recommended).
cachedir=./data/cache

# Whether to display progress bars in the console
progressbars=True

# Directory for logging debugging images
outdir=./out
imagelogdir=${DEFAULT:outdir}/log/images



# =============================================================================
# ========= Configuration parameters for www2dat.py ===========================
# =============================================================================
[www2dat]

# Number of seconds to sleep between downloads; this can help avoid 
# connection resets by the FFIEC's server. The FFIEC appears to be 
# particularly glitchy about automated downloads, and even a 
# long interval may not address the problem. 
# You may well find it easier to pick a short interval (for example, 
# sleep_interval=5), and download the NIC files "manually" from:
#   https://www.ffiec.gov/npw/FinancialReport/DataDownload
# If you do this, be sure that the filenames of your downloads match the
# local target filenames below (nic_xmltgt_attributesactive, etc.).
sleep_interval=30


#..............................................................................
# Whether to download the NIC data
nic_fetch=False

# Local directory to store the downloaded NIC data files
# Modify this only when truly necessary, and if you know what you're doing
nic_dir=${DEFAULT:datadir}/NIC

# Local subdirectory (within the nic_dir) to store the NIC data files
# This should be a string of the form YYYYQQ (for example, '2019Q2')
# Alternatively, set nic_subdir=None to generate a value based on today's date
#nic_subdir=None
nic_subdir=2019Q3

# If downloading, which NIC format to retrieve. Recognized options are:
#   XML  -- Zipped XML downloads
#   CSV  -- Zipped CSV downloads
#   Both -- Both XML and CSV
# There will typically be no need to download both versions. If XML is 
# downloaded, you will need to parse the XML to CSV, so the recommended 
# choice for most users here is CSV.
nic_format=XML

# Download URLs for the NIC XML data
# Modify these only when truly necessary, and if you know what you're doing
nic_xml_urllist=[
    'https://www.ffiec.gov/npw/FinancialReport/ReturnAttributesActiveZipFile',
    'https://www.ffiec.gov/npw/FinancialReport/ReturnAttributesBranchesZipFile',
    'https://www.ffiec.gov/npw/FinancialReport/ReturnAttributesClosedZipFile',
    'https://www.ffiec.gov/npw/FinancialReport/ReturnRelationshipsZipFile',
    'https://www.ffiec.gov/npw/FinancialReport/ReturnTransformationZipFile',
  ]
# Local target files for the same
nic_xmlzip_filelist=[
    'XML_ATTRIBUTES_ACTIVE.zip',
    'XML_ATTRIBUTES_BRANCHES.zip',
    'XML_ATTRIBUTES_CLOSED.zip',
    'XML_RELATIONSHIPS.zip',
    'XML_TRANSFORMATIONS.zip',
  ]

# Download URLs for the NIC XML data
# Modify these only when truly necessary, and if you know what you're doing
nic_csv_urllist=[
    'https://www.ffiec.gov/npw/FinancialReport/ReturnAttributesActiveZipFileCSV',
    'https://www.ffiec.gov/npw/FinancialReport/ReturnAttributesBranchesZipFileCSV',
    'https://www.ffiec.gov/npw/FinancialReport/ReturnAttributesClosedZipFileCSV',
    'https://www.ffiec.gov/npw/FinancialReport/ReturnRelationshipsZipFileCSV',
    'https://www.ffiec.gov/npw/FinancialReport/ReturnTransformationZipFileCSV',
  ]
# Local target files for the same
nic_csvzip_filelist=[
    'CSV_ATTRIBUTES_ACTIVE.zip',
    'CSV_ATTRIBUTES_BRANCHES.zip',
    'CSV_ATTRIBUTES_CLOSED.zip',
    'CSV_RELATIONSHIPS.zip',
    'CSV_TRANSFORMATIONS.zip',
  ]


#..............................................................................
# Whether to download the FDIC community banking data data
fdiccb_fetch=False

# Local directory to store the downloaded FDIC CB data files
# Modify this only when truly necessary, and if you know what you're doing
fdiccb_dir=${DEFAULT:datadir}/FDIC_CB

# Download URLs for the FDIC community banking data (includes high-holders)
# For detailed documentation, see:  
#   https://www.fdic.gov/regulations/resources/cbi/data.html
#   https://www.fdic.gov/regulations/resources/cbi/data/public-cb-readme.html
#   https://www.fdic.gov/regulations/resources/cbi/data/public-cb-multi-period-readme.html
#   https://www.fdic.gov/regulations/resources/cbi/data/public-ref-readme.html
# Modify these only when truly necessary, and if you know what you're doing
fdiccb_urllist=[
    'https://www.fdic.gov/regulations/resources/cbi/data/historical-community-banking-reference-data-1984-to-1987.zip',
    'https://www.fdic.gov/regulations/resources/cbi/data/historical-community-banking-reference-data-1988-to-1991.zip',
    'https://www.fdic.gov/regulations/resources/cbi/data/historical-community-banking-reference-data-1992-to-1996.zip',
    'https://www.fdic.gov/regulations/resources/cbi/data/historical-community-banking-reference-data-1997-to-2002.zip',
    'https://www.fdic.gov/regulations/resources/cbi/data/historical-community-banking-reference-data-2003-to-2009.zip',
    'https://www.fdic.gov/regulations/resources/cbi/data/historical-community-banking-reference-data-2010-to-2016.zip',
    'https://www.fdic.gov/regulations/resources/cbi/data/historical-community-banking-reference-data-2017-to-2019.zip',
    ]
# Local target files to match the elements of the fdiccb_csvurl_list. 
# These filenames should appear in the same sequence as the URLs above
fdiccb_zip_filelist=[
    'FDIC_CB_1984-1987.zip',
    'FDIC_CB_1988-1991.zip',
    'FDIC_CB_1992-1996.zip',
    'FDIC_CB_1997-2002.zip',
    'FDIC_CB_2003-2009.zip',
    'FDIC_CB_2010-2016.zip',
    'FDIC_CB_2017-2019.zip',
    ]

#..............................................................................
# Whether to download the FDIC failure data 
fdicsod_fetch=True

# Local directory to store the downloaded FDIC Fail files
# Modify this only when truly necessary, and if you know what you're doing
fdicsod_dir=${DEFAULT:datadir}/FDIC_SoD

# Download URLs for the FDIC summary of deposits data (includes high-holders)
# For detailed documentation, see:  
#   https://www5.fdic.gov/sod/dynaDownload.asp?barItem=6
#   https://www.fdic.gov/regulations/resources/call/sod.html
# Modify these only when truly necessary, and if you know what you're doing
fdicsod_urllist=[
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2018.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2017.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2016.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2015.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2014.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2013.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2012.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2011.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2010.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2009.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2008.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2007.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2006.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2005.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2004.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2003.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2002.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2001.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_2000.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1999.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1998.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1997.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1996.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1995.zip',
   'https://www5.fdic.gov/sod/ShowFileWithStats1.asp?strFileName=ALL_1994.zip',
  ]

# Filenames of the unzipped CSV files for the FDIC SoD download
# Modify this only when truly necessary, and if you know what you're doing
fdicsod_zip_filelist=[
    'ALL_2018.zip',
    'ALL_2017.zip',
    'ALL_2016.zip',
    'ALL_2015.zip',
    'ALL_2014.zip',
    'ALL_2013.zip',
    'ALL_2012.zip',
    'ALL_2011.zip',
    'ALL_2010.zip',
    'ALL_2009.zip',
    'ALL_2008.zip',
    'ALL_2007.zip',
    'ALL_2006.zip',
    'ALL_2005.zip',
    'ALL_2004.zip',
    'ALL_2003.zip',
    'ALL_2002.zip',
    'ALL_2001.zip',
    'ALL_2000.zip',
    'ALL_1999.zip',
    'ALL_1998.zip',
    'ALL_1997.zip',
    'ALL_1996.zip',
    'ALL_1995.zip',
    'ALL_1994.zip',
    ]


#..............................................................................
# Whether to download the FDIC failure data 
fdicfail_fetch=True

# Local directory to store the downloaded FDIC Fail files
# Modify this only when truly necessary, and if you know what you're doing
fdicfail_dir=${DEFAULT:datadir}/FDIC_Fail

# Download URL for the FDIC failure data (includes resolution costs)
# Modify this only when truly necessary, and if you know what you're doing
fdicfail_urllist=['https://tinyurl.com/y3nlsvrk']
# Local target files for the same
fdicfail_csv_filelist=['FDIC_FailureAssistance.csv']



# =============================================================================
# ========= Configuration parameters for zip2xml.py ===========================
# =============================================================================
[dat2csv]

# Whether to overwrite existing local files when unzipping
force=True


#..............................................................................
# Whether to attempt unzipping the NIC data
nic_unzip=True

# Whether to parse the XML files. 
# If you are working with the CSV downloads of the NIC files, you should
# set this to False, as there will be no XML files to parse.
perform_xml_parse=True

# Local directory to store the downloaded NIC data files
# Modify this only when truly necessary, and if you know what you're doing
nic_dir=${www2dat:nic_dir}

# Local subdirectory (within the nic_dir) to store the NIC data files
# Modify this only when truly necessary, and if you know what you're doing
nic_subdir=${www2dat:nic_subdir}

# If downloading, which NIC format to unzip
# Modify this only when truly necessary, and if you know what you're doing
nic_format=${www2dat:nic_format}

# Local filenames for the downloaded NIC (zipped) XML files
# Modify these only when truly necessary, and if you know what you're doing
#nic_xmlzip_filelist=[
#    '20160630_ATTRIBUTES_ACTIVE.zip',
#    '20160630_ATTRIBUTES_BRANCH.zip',
#    '20160630_ATTRIBUTES_INACTIVE.zip',
#    '20160630_RELATIONSHIPS.zip',
#    '20160630_TRANSFORMATIONS.zip',
#  ]
#nic_xmlzip_filelist=[
#    '20180630_ATTRIBUTES_ACTIVE.zip',
#    '20180630_ATTRIBUTES_BRANCH.zip',
#    '20180630_ATTRIBUTES_INACTIVE.zip',
#    '20180630_RELATIONSHIPS.zip',
#    '20180630_TRANSFORMATIONS.zip',
#  ]
nic_xmlzip_filelist=${www2dat:nic_xmlzip_filelist}

nic_xml_filelist=[
    'ATTRIBUTES_ACTIVE.xml',
    'ATTRIBUTES_BRANCH.xml',
    'ATTRIBUTES_CLOSED.xml',
    'RELATIONSHIPS.xml',
    'TRANSFORMATIONS.xml',
  ]

# Local filenames for the downloaded NIC (zipped) CSV files
# Modify these only when truly necessary, and if you know what you're doing
nic_csvzip_filelist=${www2dat:nic_csvzip_filelist}

# Normalized filenames to apply after unzipping the CSV files.
# These names guarantee that both unzipped CSVs and CSVs parsed from XML
# have the identical filenames for downstream processing.
# Modify these only when truly necessary, and if you know what you're doing
nic_csv_filelist=[
    'ATTRIBUTES_ACTIVE.csv',
    'ATTRIBUTES_BRANCH.csv',
    'ATTRIBUTES_CLOSED.csv',
    'RELATIONSHIPS.csv',
    'TRANSFORMATIONS.csv',
  ]

# Universe of attribute fields, in the order the columns should appear in 
# the CSV file. Running xml2csv in veryverbose mode will display this list, 
# sorted alphabetically. 
# Alternatively, the following commands will show the alphabetical list:
#   import bhc_config as CONFIG
#   print sorted(CONFIG.attributestemplate)
attributestemplate=[
    'ID_RSSD',
    'ACT_PRIM_CD',
    'AUTH_REG_DIST_FRS',
    'BANK_CTD',
    'BHC_IND',
    'BNK_TYPE_ANALYS_CD',
    'BROAD_REG_CD',
    'CHTR_AUTH_CD',
    'CHTR_TYPE_CD',
    'CITY',
    'CNSRVTR_CD',
    'CNTRY_CD',
    'CNTRY_INC_CD',
    'CNTRY_INC_NM',
    'CNTRY_NM',
    'COUNTY_CD',
    'DIST_FRS',
    'DOMESTIC_IND',
    'DT_END',
    'DT_EXIST_CMNC',
    'DT_EXIST_TERM',
    'DT_INSUR',
    'DT_OPEN',
    'DT_START',
    'D_DT_END',
    'D_DT_EXIST_CMNC',
    'D_DT_EXIST_TERM',
    'D_DT_INSUR',
    'D_DT_OPEN',
    'D_DT_START',
    'ENTITY_TYPE',
    'EST_TYPE_CD',
    'FBO_4C9_IND',
    'FHC_IND',
    'FISC_YREND_MMDD',
    'FNCL_SUB_HOLDER',
    'FNCL_SUB_IND',
    'FUNC_REG',
    'IBA_GRNDFTHR_IND',
    'IBF_IND',
    'ID_ABA_PRIM',
    'ID_CUSIP',
    'ID_FDIC_CERT',
    'ID_LEI',
    'ID_NCUA',
    'ID_OCC',
    'ID_RSSD_HD_OFF',
    'ID_TAX',
    'ID_THRIFT',
    'ID_THRIFT_HC',
    'IHC_IND',
    'INSUR_PRI_CD',
    'MBR_FHLBS_IND',
    'MBR_FRS_IND',
    'MJR_OWN_MNRTY',
    'NM_LGL',
    'NM_SHORT',
    'NM_SRCH_CD',
    'ORG_TYPE_CD',
    'PLACE_CD',
    'PRIM_FED_REG',
    'PROV_REGION',
    'REASON_TERM_CD',
    'SEC_RPTG_STATUS',
    'SLHC_IND',
    'SLHC_TYPE_IND',
    'STATE_ABBR_NM',
    'STATE_CD',
    'STATE_HOME_CD',
    'STATE_INC_ABBR_NM',
    'STATE_INC_CD',
    'STREET_LINE1',
    'STREET_LINE2',
    'URL',
    'ZIP_CD',
 ]

# Universe of relationship fields, in the order the columns should appear in 
# the CSV file. Running xml2csv in veryverbose mode will display this list, 
# sorted alphabetically. 
# Alternatively, the following commands will show the alphabetical list:
#   import bhc_config as CONFIG
#   print sorted(CONFIG.relationshipstemplate)
relationshipstemplate=[
    'CTRL_IND',
    'DT_END',
    'DT_RELN_EST',
    'DT_START',
    'D_DT_END',
    'D_DT_RELN_EST',
    'D_DT_START',
    'EQUITY_IND',
    'FC_IND',
    'ID_RSSD_OFFSPRING',
    'ID_RSSD_PARENT',
    'MB_COST',
    'OTHER_BASIS_IND',
    'PCT_EQUITY',
    'PCT_EQUITY_BRACKET',
    'PCT_EQUITY_FORMAT',
    'PCT_OTHER',
    'REASON_ROW_CRTD',
    'REASON_TERM_RELN',
    'REGK_INV',
    'REG_IND',
    'RELN_LVL',
 ]

# Universe of transformations fields, in the order the columns should appear in 
# the CSV file. Running xml2csv in veryverbose mode will display this list, 
# sorted alphabetically. 
# Alternatively, the following commands will show the alphabetical list:
#   import bhc_config as CONFIG
#   print sorted(CONFIG.transformationstemplate)
transformationstemplate=[
    'ACCT_METHOD',
    'DT_TRANS',
    'D_DT_TRANS',
    'ID_RSSD_PREDECESSOR',
    'ID_RSSD_SUCCESSOR',
    'TRNSFM_CD',
 ]

# The extension to use on the output CSV file
outfileext=.csv

# The delimiter to use in generating the CSV file while parsing the XML.
# A tab delimiter is recommended (use the special string: <TAB>), because 
# other common choices for delimiters (e.g., commas) are likely to 
# conflict with characters within the data.
# Modify this only when truly necessary, and if you know what you're doing
delim=<TAB>

# Size of a parsing buffer, which should be large enough to read a full 
# XML element at each iteration. 
# If this number is too small, parsing may fail.
# If this number is too large, parsing will be slow.
# A good choice is chunksize=4096. 
# Modify this only when truly necessary, and if you know what you're doing
chunksize=4096


#..............................................................................
# Whether to attempt unzipping the FDIC Summary of Deposits (SoD) data
fdicsod_unzip=True

# Local directory that stores the downloaded FDIC SoD data files
# Modify this only when truly necessary, and if you know what you're doing
fdicsod_dir=${www2dat:fdicsod_dir}

# Local filenames for the downloaded FDIC SoD data files
# Modify this only when truly necessary, and if you know what you're doing
fdicsod_zip_filelist=${www2dat:fdicsod_zip_filelist}


#..............................................................................
# Whether to attempt unzipping the FDIC CB data
fdiccb_unzip=True

# Local directory that stores the downloaded FDIC CB data files
# Modify this only when truly necessary, and if you know what you're doing
fdiccb_dir=${www2dat:fdiccb_dir}

# Local filenames for the downloaded FDIC CB data files
# Modify this only when truly necessary, and if you know what you're doing
fdiccb_zip_filelist=${www2dat:fdiccb_zip_filelist}

# Normalized local filenames for unzipped FDIC CB data files (CSV format)
# Each filename *must* be of the form (case-sensitive): 
#    FDIC_CB_yyyy-yyyy.csv
# because the filenames themselves encode the years covered. 
fdiccb_csv_filelist=[
    'FDIC_CB_1984-1987.csv',
    'FDIC_CB_1988-1991.csv',
    'FDIC_CB_1992-1996.csv',
    'FDIC_CB_1997-2002.csv',
    'FDIC_CB_2003-2009.csv',
    'FDIC_CB_2010-2016.csv',
    'FDIC_CB_2017-2019.csv',
  ]



# Location for the raw *.zip input files
# Modify this only when truly necessary, and if you know what you're doing
#indir=${DEFAULT:datadir}

# Location for the processed *.xml output files
# Modify this only when truly necessary, and if you know what you're doing
#outdir=${DEFAULT:datadir}

  
# =============================================================================
# ========= Configuration parameters for csv2cch.py ===========================
# =============================================================================
[csv2cch]

# The first (asofdate0) and last (asofdate1) as-of dates to loop over.
# Each as-of endpoint should be a string of the form 'YYYYQQ', which will 
# be converted into proper end-of-quarter integers of the form YYYYMMDD,
# along with any intervening quarter endpoints. 
#asofdate0=1986Q1
asofdate0=2000Q1
asofdate1=2018Q2

# Whether to produce super-granular logging
trace_logging=False

# Whether to ignore joint-venture entities when mapping IDs
jv_ignore=False

# A list of additional NIC attributes to attach to the entity nodes in
# the BHC network object. 
# The GEO_JURISD attribute is derived, and it should be omitted from this list
# Ensure that 'NICsource' and 'ENTITY_TYPE' are included here
node_attributes=[
    'NICsource',              # Must-have 
    'ENTITY_TYPE',            # Must-have 
    'CHTR_TYPE_CD',
    'NM_LGL',
    'CNTRY_NM',
    'STATE_ABBR_NM',
    'CNTRY_CD',
    'DIST_FRS',
    'EST_TYPE_CD',
    'PRIM_FED_REG',
    'ZIP_CD',
    'BROAD_REG_CD',
    'BNK_TYPE_ANALYS_CD',
    'BHC_IND',
 ]
 
# A list of additional NIC attributes to attach to the entity nodes in
# the BHC network object. 
# The GEO_JURISD attribute is derived, and it should be omitted from this list
# Ensure that 'NICsource' and 'ENTITY_TYPE' are included here
edge_attributes=[
    'DT_RELN_EST', 
    'DT_START', 
    'DT_END', 
    'EQUITY_IND', 
    'FC_IND', 
    'OTHER_BASIS_IND', 
    'PCT_EQUITY', 
    'PCT_EQUITY_BRACKET', 
    'PCT_EQUITY_FORMAT', 
    'PCT_OTHER', 
    'REGK_INV', 
    'RELN_LVL',
 ]
 

#..............................................................................
# Whether to empty the cache and start from scratch
banksys_clearcache=True

#..............................................................................
# Whether to empty the cache and start from scratch
nic_clearcache=False

# Local directory to store the downloaded NIC data files
# Modify this only when truly necessary, and if you know what you're doing
nic_dir=${dat2csv:nic_dir}

# Local subdirectory (within the nic_dir) to store the NIC data files
# Modify this only when truly necessary, and if you know what you're doing
nic_subdir=${dat2csv:nic_subdir}

# Modify this only when truly necessary, and if you know what you're doing
nic_csv_filelist=${dat2csv:nic_csv_filelist}

# These are the default filenames of the CSV source files in the indir.
# We do not use the NIC Transformations file, but list it for completeness

# The delimiter to use when parsing the NIC CSV files.
# If you are using the CSV downloads of the NIC from the FFIEC's site, then
# use the comma (delim=,) delimiter, because that is the FFIEC convention.
# If you are parsing the XML downloads of the NIC from the FFIEC's site, then
# use whatever delimiter you used above at the XML parsing stage to 
# generate your CSV files. 
#delim=<TAB>
#delim=${xml2csv:delim}
delim=<TAB>


#..............................................................................
# Whether to empty the cache and start from scratch
fdiccb_clearcache=False

# Local directory to store the downloaded FDIC CB data files
# Modify this only when truly necessary, and if you know what you're doing
fdiccb_dir=${dat2csv:fdiccb_dir}

# Local target files for the unzipped FDIC CB data files
# These file names need to match the files as unpacked by step www2dat
fdiccb_csv_filelist=${dat2csv:fdiccb_csv_filelist}

#..............................................................................
# Whether to empty the cache and start from scratch
fdicsod_clearcache=False

# Local directory that stores the downloaded FDIC SoD data files
# Modify this only when truly necessary, and if you know what you're doing
fdicsod_dir=${dat2csv:fdicsod_dir}

# Filenames of the unzipped CSV files for the FDIC SoD download
# Modify this only when truly necessary, and if you know what you're doing
fdicsod_csv_filelist=[
            'ALL_2018.csv',
            'ALL_2017.csv',
            'ALL_2016.csv',
            'ALL_2015.csv',
            'ALL_2014.csv',
            'ALL_2013.csv',
            'ALL_2012.csv',
            'ALL_2011.csv',
            'ALL_2010.csv',
            'ALL_2009.csv',
            'ALL_2008.csv',
            'ALL_2007.csv',
            'ALL_2006.csv',
            'ALL_2005.csv',
            'ALL_2004.csv',
            'ALL_2003.csv',
            'ALL_2002.csv',
            'ALL_2001.csv',
            'ALL_2000.csv',
            'ALL_1999.csv',
            'ALL_1998.csv',
            'ALL_1997.csv',
            'ALL_1996.csv',
            'ALL_1995.csv',
            'ALL_1994.csv',
    ]
    
#..............................................................................
# Whether to empty the cache and start from scratch
fdicfail_clearcache=False

# Local directory that stores the downloaded FDIC failure data files
# Modify this only when truly necessary, and if you know what you're doing
fdicfail_dir=${www2dat:fdicfail_dir}

# Filenames of the CSV files for the FDIC failure data download
# Modify this only when truly necessary, and if you know what you're doing
#fdicfail_csv_file=${www2dat:fdicfail_csvtgt_curr}
fdicfail_csv_file=FDIC_bankfailure_data.csv

#..............................................................................
# Whether to empty the cache and start from scratch
idmaps_clearcache=False


# Location for the processed *.xml output files
# Modify this only when truly necessary, and if you know what you're doing
cachedir=${DEFAULT:cachedir}

# Number of parallel processes to allow for pickling. 
# See the discussion of parallelcores above. 
# Modify this only when truly necessary, and if you know what you're doing
#parallel=0
parallel=${DEFAULT:parallelcores}


# =============================================================================
# ========= Configuration parameters for sys2bhc.py ===========================
# =============================================================================
[cch2jbf]

# Whether to produce super-granular logging
trace_logging=False


# These are the default filenames of the CSV source files in indir.
# Note that we do not use the NIC Transformations file
# Local directory to store the downloaded NIC data files
# Modify this only when truly necessary, and if you know what you're doing
nic_dir=${csv2cch:nic_dir}
nic_subdir=${csv2cch:nic_subdir}
nic_csv_filelist=${csv2cch:nic_csv_filelist}
delim=${csv2cch:delim}
nic_clearcache=False

fdiccb_dir=${csv2cch:fdiccb_dir}
fdiccb_csv_filelist=${csv2cch:fdiccb_csv_filelist}
fdiccb_clearcache=False

fdicsod_dir=${csv2cch:fdicsod_dir}
fdicsod_csv_filelist=${csv2cch:fdicsod_csv_filelist}
fdicsod_clearcache=False

banksys_clearcache=False


# ==============================================================================
# Whether to produce the full panel of complexity results
make_panel=True

# A first (asofdate0) and last (asofdate1) asof dates to include in the panel.
panel_asofdate0=2015Q1
panel_asofdate1=2015Q1

# The default filename of the CSV output file (placed in outdir).
panel_outdir=${DEFAULT:outdir}/gendata
panel_filename=bhc_complexity_panel_${panel_asofdate0}-${panel_asofdate1}.csv

panel_bhclist=[
#    1073757, # Bank of America
#    1039502, # JPMorgan Chase
#    1951350, # Citigroup
#    1073551, # Wachovia
#    1120754, # Wells Fargo
     ]

panel_metricslist=[
    'Bas_Vertex_count',
    'Bas_Edge_count',
    'Bas_Cycle_rank',
    'Bas_Num_CComp',
    'Ent_Qfull_B1',
    'Ent_Qhetr_B1',
    'Ent_Qfcon_B1',
    'Ent_Qhcon_B1',
    'Ent_edgcn_B1',
    'Ent_DjHom_B1',
    'Ent_DjHom_M',
    'Ent_Nlabl',
    'Geo_Qfull_B1',
    'Geo_Qhetr_B1',
    'Geo_Qfcon_B1',
    'Geo_Qhcon_B1',
    'Geo_edgcn_B1',
    'Geo_DjHom_B1',
    'Geo_DjHom_M',
    'Geo_Nlabl',
    ]    

# ==============================================================================
# Whether to produce the Wachovia-Wells Fargo complexity comparison (Table 2)
make_wachwells=True

make_wachwells_bhcqtrs = [
    (1120754,20061231),
    (1073551,20061231),
    (1120754,20080930), 
    (1073551,20080930),
    (1120754,20081231),
    (1120754,20101231),
    ]

# ==============================================================================
# Whether to produce a persistent homology sequence
make_persistent=False

make_persistent_bhcqtrs = [
    (1120754,20061231),
    (1120754,20081231),
    (1120754,20101231),
    ]
    
make_persistent_outdir=${DEFAULT:outdir}
make_persistent_outfile=jbf_persistent.csv

node_attributes=${csv2cch:node_attributes}
edge_attributes=${csv2cch:edge_attributes}

make_persistent_cutincr=5


# ==============================================================================
# Whether to produce the Wachovia-Wells Fargo complexity comparison (Table 2)
make_failscatter=False

failscatter_asofdate0=2004Q1
failscatter_asofdate1=2017Q4

# Local directory that stores the downloaded FDIC failure data files
# Modify this only when truly necessary, and if you know what you're doing
fdicfail_dir=${csv2cch:fdicfail_dir}

# Filenames of the CSV files for the FDIC failure data download
# Modify this only when truly necessary, and if you know what you're doing
#fdicfail_csv_file=${www2dat:fdicfail_csvtgt_curr}
fdicfail_csv_file=${csv2cch:fdicfail_csv_file}

fdicfail_clearcache=False

failscatter_outdir=${DEFAULT:outdir}/gendata
failscatter_filename=failscatter_${failscatter_asofdate0}-${failscatter_asofdate1}



# ==============================================================================
# A map that connects NIC entity types to X11 colors
# For a full X11 color palette, see:  https://graphviz.org/doc/info/colors.html
colormap={
    # Holding companies - BLUE
    'BHC':'cadetblue1',      # BHC Bank Holding Company
    'FBH':'cadetblue3',      # FBH Foreign Banking Organization as a BHC
    'FHD':'deepskyblue',     # FHD Financial Holding Company / BHC 
    'FHF':'deepskyblue3',    # FHF Financial Holding Company / FBO
    'IHC':'lightcyan',       # IHC Intermediate Holding Company
    'SLHC':'cornflowerblue', # SLHC Savings and Loan Holding Company
    # Bank-like entities - RED
    'AGB':'brown1',          # AGB Agreement Corporation - Banking
    'CPB':'sienna1',         # CPB Cooperative Bank
    'EDB':'brown3',          # EDB Edge Corporation - Banking
    'FSB':'darkorange1',     # FSB Federal Savings Bank
    'FBK':'indianred',       # FBK Foreign Bank
    'FBO':'indianred1',      # FBO Foreign Banking Organization
    'FCU':'salmon',          # FCU Federal Credit Union
    'IBK':'tomato',          # IBK Int'l Bank of US Depository - Edge/Trust Co.
    'NAT':'crimson',         # NAT National Bank
    'NMB':'coral3',          # NMB Non-member Bank
    'SAL':'darkorange',      # SAL Savings & Loan Association
    'SCU':'sienna3',         # SCU State Credit Union
    'SMB':'coral1',          # SMB State Member Bank
    'SSB':'darkorange2',     # SSB State Savings Bank
    # Branch-like entities - YELLOW
    'DBR':'gold',            # DBR Domestic Branch of a Domestic Bank
    'EBR':'goldenrod3',      # EBR Edge Corporation - Domestic Branch
    'IBR':'navajowhite',     # IBR Foreign Branch of a U.S. Bank
    'IFB':'khaki',           # IFB Insured Federal Branch of an FBO
    'ISB':'khaki3',          # ISB Insured State Branch of an FBO
    'PST':'lemonchiffon',    # PST Pseudo-TWIG
    'REP':'darkgoldenrod1',  # REP Representative Office
    'TWG':'lemonchiffon1',   # TWG TWIG
    'UFA':'yellow',          # UFA Uninsured Federal Agency of an FBO
    'UFB':'yellow1',         # UFB Uninsured Federal Branch of an FBO
    'USA':'yellow2',         # USA Uninsured State Agency of an FBO
    'USB':'yellow3',         # USB Uninsured State Branch of an FBO
    # Investment entities - GREEN
    'AGI':'olivedrab1',      # AGI Agreement Corporation - Investment
    'EDI':'olivedrab3',      # EDI Edge Corporation - Investment
    'FNC':'seagreen1',       # FNC Finance Company
    'MTC':'palegreen1',      # MTC Non-deposit Trust Company - Member
    'NTC':'palegreen3',      # NTC Non-deposit Trust Company - Non-member
    'NYI':'seagreen3',       # NYI New York Investment Company
    'SBD':'lawngreen',       # SBD Securities Broker / Dealer
    # Miscellaneous entity types - GREY
    'DEO':'gray100',         # DEO Domestic Entity Other
    'DPS':'gray',            # DPS Data Processing Servicer
    'FEO':'gray70',          # FEO Foreign Entity Other
    'INB':'gray90',          # INB Int'l Non-bank Subs of Domestic Entities
 }

colormap_geo={
    # North America - BLUE
    'CANADA':'cornflowerblue',
    # U.S. northeast
    'UNITED STATES - CT':'cadetblue1',
    'UNITED STATES - DE':'cadetblue1',
    'UNITED STATES - DC':'cadetblue1',
    'UNITED STATES - ME':'cadetblue1',
    'UNITED STATES - MD':'cadetblue1',
    'UNITED STATES - MA':'cadetblue1',
    'UNITED STATES - NH':'cadetblue1',
    'UNITED STATES - NJ':'cadetblue1',
    'UNITED STATES - NY':'cadetblue1',
    'UNITED STATES - PA':'cadetblue1',
    'UNITED STATES - RI':'cadetblue1',
    'UNITED STATES - VT':'cadetblue1',
    # U.S. southeast
    'UNITED STATES - AL':'cadetblue3',
    'UNITED STATES - AR':'cadetblue3',
    'UNITED STATES - FL':'cadetblue3',
    'UNITED STATES - GA':'cadetblue3',
    'UNITED STATES - LA':'cadetblue3',
    'UNITED STATES - MS':'cadetblue3',
    'UNITED STATES - NC':'cadetblue3',
    'UNITED STATES - SC':'cadetblue3',
    'UNITED STATES - TN':'cadetblue3',
    'UNITED STATES - VA':'cadetblue3',
    # U.S. midwest
    'UNITED STATES - IL':'deepskyblue',
    'UNITED STATES - IN':'deepskyblue',
    'UNITED STATES - IA':'deepskyblue',
    'UNITED STATES - KY':'deepskyblue',
    'UNITED STATES - MI':'deepskyblue',
    'UNITED STATES - MN':'deepskyblue',
    'UNITED STATES - MO':'deepskyblue',
    'UNITED STATES - OH':'deepskyblue',
    'UNITED STATES - WV':'deepskyblue',
    'UNITED STATES - WI':'deepskyblue',
    # U.S. central
    'UNITED STATES - CO':'deepskyblue3',
    'UNITED STATES - KS':'deepskyblue3',
    'UNITED STATES - MT':'deepskyblue3',
    'UNITED STATES - ND':'deepskyblue3',
    'UNITED STATES - NE':'deepskyblue3',
    'UNITED STATES - NM':'deepskyblue3',
    'UNITED STATES - OK':'deepskyblue3',
    'UNITED STATES - SD':'deepskyblue3',
    'UNITED STATES - TX':'deepskyblue3',
    'UNITED STATES - WY':'deepskyblue3',
    # U.S. west
    'UNITED STATES - AK':'lightcyan',
    'UNITED STATES - AZ':'lightcyan',
    'UNITED STATES - CA':'lightcyan',
    'UNITED STATES - HI':'lightcyan',
    'UNITED STATES - ID':'lightcyan',
    'UNITED STATES - NV':'lightcyan',
    'UNITED STATES - OR':'lightcyan',
    'UNITED STATES - UT':'lightcyan',
    'UNITED STATES - WA':'lightcyan',
    # Europe - RED
    'ENGLAND':'brown1',
    'LUXEMBOURG':'sienna1',
    'IRELAND':'brown3',
    'NETHERLANDS':'darkorange1',
    'UNITED KINGDOM (OTHER)':'indianred',
    'FRANCE (OTHER)':'indianred1',
    'GERMANY':'salmon',
    'ITALY (OTHER)':'tomato',
    'SWITZERLAND (OTHER)':'crimson',
    'JERSEY':'coral3',
    'SPAIN':'darkorange',
    'POLAND':'sienna3',
    'BELGIUM':'coral1',
    'SWEDEN':'darkorange2',
    'SCOTLAND':'pink',
    'PORTUGAL':'pink',
    'GUERNSEY':'pink',
    'NORWAY':'pink',
    'CHANNEL ISLANDS':'pink',
    'TURKEY':'pink',
    'AUSTRIA':'pink',
    'DENMARK (OTHER)':'pink',
    'FINLAND':'pink',
    'RUSSIA':'pink',
    'CZECH REPUBLIC':'pink',
    'HUNGARY':'pink',
    'CYPRUS':'pink',
    'GIBRALTAR':'pink',
    'GREECE':'pink',
    'MONACO':'pink',
    'ISLE OF MAN':'pink',
    'CROATIA':'pink',
    'LIECHTENSTEIN':'pink',
    'ROMANIA':'pink',
    'SLOVAKIA':'pink',
    'UKRAINE':'pink',
    'ICELAND':'pink',
    'LATVIA':'pink',
    'LITHUANIA':'pink',
    'MACEDONIA (FORMER YUGOSLAV REPUBLIC OF)':'pink',
    'MALTA':'pink',
    'SERBIA AND MONTENEGRO(FORMER YUGOSLAVIA)':'pink',
    'WALES':'pink',
    'ANDORRA':'pink',
    'BELARUS':'pink',
    'BOSNIA AND HERZEGOVINA':'pink',
    'ESTONIA':'pink',
    'SLOVENIA':'pink',
    # Latin America - YELLOW
    'CAYMAN ISLANDS':'gold',
    'PUERTO RICO':'goldenrod3',
    'BRAZIL':'navajowhite',
    'MEXICO':'khaki',
    'BERMUDA':'khaki3',
    'CHILE':'lemonchiffon',
    'COLOMBIA':'darkgoldenrod1',
    'ARGENTINA':'lemonchiffon1',
    'VENEZUELA':'yellow',
    'BRITISH VIRGIN ISLANDS':'yellow1',
    'BAHAMAS, THE':'yellow2',
    'PANAMA':'lightyellow',
    'JAMAICA':'lightyellow',
    'COSTA RICA':'lightyellow',
    'CURACAO, BONAIRE, SABA, ST. MARTIN & ST.':'lightyellow',
    'BARBADOS':'lightyellow',
    'URUGUAY':'lightyellow',
    'PERU':'lightyellow',
    'EL SALVADOR':'lightyellow',
    'VIRGIN ISLANDS OF THE U.S.':'lightyellow',
    'DOMINICAN REPUBLIC':'lightyellow',
    'ECUADOR':'lightyellow',
    'NETHERLANDS ANTILLES':'lightyellow',
    'GUATEMALA':'lightyellow',
    'HONDURAS':'lightyellow',
    'NICARAGUA':'lightyellow',
    'PARAGUAY':'lightyellow',
    'TURKS & CAICOS ISLANDS':'lightyellow',
    'ARUBA':'lightyellow',
    'BOLIVIA':'lightyellow',
    'BRITISH WEST INDIES (OTHER)':'lightyellow',
    'HAITI':'lightyellow',
    'TRINIDAD':'lightyellow',
    'TRINIDAD & TOBAGO (OTHER)':'lightyellow',
    'SAINT LUCIA':'lightyellow',
    # Asia and Middle East - GREEN
    'AUSTRALIA':'olivedrab1',
    'JAPAN':'olivedrab3',
    'SINGAPORE':'seagreen1',
    'CHINA, PEOPLES REPUBLIC OF':'palegreen1',
    'HONG KONG':'palegreen3',
    'INDIA (OTHER)':'seagreen3',
    'PHILIPPINES':'lawngreen',
    'KOREA, SOUTH':'springgreen',
    'MALAYSIA (OTHER)':'green3',
    'ISRAEL':'darkseagreen1',
    'TAIWAN':'darkseagreen1',
    'THAILAND':'darkseagreen1',
    'NEW ZEALAND (OTHER)':'darkseagreen1',
    'GUAM':'darkseagreen1',
    'INDONESIA (OTHER)':'darkseagreen1',
    'UNITED ARAB EMIRATES (OTHER)':'darkseagreen1',
    'SAUDI ARABIA':'darkseagreen1',
    'LEBANON':'darkseagreen1',
    'IRAN':'darkseagreen1',
    'KUWAIT':'darkseagreen1',
    'TUNISIA':'darkseagreen1',
    'BAHRAIN':'darkseagreen1',
    'EGYPT':'darkseagreen1',
    'DUBAI':'darkseagreen1',
    'PAKISTAN':'darkseagreen1',
    'IRAQ':'darkseagreen1',
    'JORDAN':'darkseagreen1',
    'SRI LANKA':'darkseagreen1',
    'AMERICAN SAMOA':'darkseagreen1',
    'AZERBAIJAN':'darkseagreen1',
    'BHUTAN':'darkseagreen1',
    'KAZAKHSTAN':'darkseagreen1',
    'NORTHERN MARIANA ISLANDS':'darkseagreen1',
    'OMAN':'darkseagreen1',
    'QATAR':'darkseagreen1',
    'VIETNAM':'darkseagreen1',
    'AFGHANISTAN':'darkseagreen1',
    'ARMENIA':'darkseagreen1',
    'BRUNEI':'darkseagreen1',
    'CAMBODIA':'darkseagreen1',
    'FEDERATED STATES OF MICRONESIA':'darkseagreen1',
    'FRENCH POLYNESIA':'darkseagreen1',
    'MACAU':'darkseagreen1',
    'MARSHALL ISLANDS':'darkseagreen1',
    'MONGOLIA':'darkseagreen1',
    'NEW CALEDONIA':'darkseagreen1',
    'PAPUA NEW GUINEA':'darkseagreen1',
    'TAJIKISTAN':'darkseagreen1',
    'TONGA':'darkseagreen1',
    # Africa - GRAY
    'MAURITIUS':'gray100',
    'SOUTH AFRICA':'gray',
    'LIBERIA':'gray70',
    'KENYA':'gray90',
    'MOROCCO (OTHER)':'gray90',
    'NIGERIA':'gray90',
    'CONGO (KINSHASA)':'gray90',
    'IVORY COAST':'gray90',
    'GUYANA':'gray90',
    'CONGO (BRAZZAVILLE)':'gray90',
    'UGANDA':'gray90',
    'ZAMBIA':'gray90',
    'ANGOLA':'gray90',
    'CAMEROON, UNITED REPUBLIC OF':'gray90',
    'COMORO ISLANDS':'gray90',
    'GABON':'gray90',
    'MALAWI':'gray90',
    'RWANDA':'gray90',
    'SENEGAL':'gray90',
    'SWAZILAND':'gray90',
    'ZIMBABWE':'gray90',
    'ETHIOPIA (OTHER)':'gray90',
    'MAURITANIA':'gray90',
    'NIGER':'gray90',
    'TANZANIA, UNITED REPUBLIC OF':'gray90',
  }

# System command to launch an SVG viewer to view the image created
# by the makeSVG method. 
# Linux examples include:
#  -- chromium-browser
#  -- firefox
#rowsercmd=firefox

# Location for the *.csv input files
# Modify this only when truly necessary, and if you know what you're doing
indir=${DEFAULT:datadir}

# Location for the processed *.xml output files
# Modify this only when truly necessary, and if you know what you're doing
outdir=${DEFAULT:datadir}

# Number of parallel processes to allow for pickling. 
# See the discussion of parallelcores above. 
# Modify this only when truly necessary, and if you know what you're doing
parallel=${DEFAULT:parallelcores}


