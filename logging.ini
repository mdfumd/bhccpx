# =============================================================================
# =================== Python logging configuration  ===========================
# =============================================================================
# https://docs.python.org/3/library/logging.config.html#logging-config-fileformat
# 
# An important configuration choice is the level of log messages to emit.
# There is a hierarchy for this. For whatever level you select, the log
# handler will emit messages of that level and higher.
# Available logging levels (to set on handlers) are, from low to high:
#   * NOTSET    Emit everything
#   * DEBUG     Very detailed information, useful for forensics
#   * INFO      Confirmation that things are working as expected
#   * WARNING   Unexpected behavior or incipient problem, but still running
#   * ERROR     Serious problem, some functionality is failing
#   * CRITICAL  Existential crisis, incipient software crash
#..............................................................................
[loggers]
keys=root

[logger_root]
# Leave this at NOTSET, apply levels to handlers
level=NOTSET      
# These handlers are configured below         
handlers=file,console

#..............................................................................
[handlers]
keys=console,file

[handler_console]
class=StreamHandler
level=WARNING
formatter=simple
args=(sys.stdout,)

[handler_file]
class=FileHandler
level=DEBUG
formatter=standard
args=('./out/log/bhc_complex.log', 'w')

#..............................................................................
[formatters]
keys=standard,simple

[formatter_standard]
format=%(asctime)s::%(levelname)s::%(name)s::%(lineno)s — %(message)s

[formatter_simple]
format=:%(levelname)s::%(name)s::%(lineno)s — %(message)s


